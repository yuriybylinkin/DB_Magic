#Использовать sql

#Область ОписаниеПеременных

// Структура - Описание доступа к серверу, полученное при вызове любого действия
Перем Сервер;

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Список баз на сервере - Получает список баз на сервере
//
// Параметры:
//  ПараметрыСервера - Структура - см. ДанныеСерверов.Сервера()[ИдентификаторСервера]      
// Возвращаемое значение:
//   ТаблицаЗначений:
//     * DATABASE_NAME - Строка - Имя базы данных 
//     * DATABASE_SIZE - Число - Размер базы данных (общий)
//
Функция СписокБазНаСервере(ПараметрыСервера) Экспорт
	
	Сервер = ПараметрыСервера;

	ТекстЗапроса = "
	|sp_databases
	|";
	
	СтрокиСДанными = ВыполнитьЗапросНаСУБД(ТекстЗапроса, 10);

	Возврат СтрокиСДанными;
		
КонецФункции

Функция ВремяПоследнегоИзмененияКонфига(ИмяБазы, ПараметрыСервера) Экспорт
	
	Сервер = ПараметрыСервера;

	ТекстЗапроса = "
	|USE [%1]
	|SELECT TOP (1) DATEADD (YEAR , -2000 , Modified) Modified 
	|FROM [dbo].[Config]
	|ORDER BY Modified DESC
	|";
	
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, ИмяБазы);

	Попытка
		СтрокиСДанными = ВыполнитьЗапросНаСУБД(ТекстЗапроса, 10);
		Если ЗначениеЗаполнено(СтрокиСДанными) Тогда
			Возврат СтрокиСДанными[0].Modified;
		КонецЕсли;
	Исключение
		Если Ложь Тогда
			СтрШаблон("База %1 не является базой 1С", ИмяБазы);
		КонецЕсли;
	КонецПопытки;

	Возврат Неопределено;
		
КонецФункции

Функция ПоследниеРазворачиванияИзБекапа(ПараметрыСервера) Экспорт
	
	Сервер = ПараметрыСервера;

	ТекстЗапроса = "
	|SELECT 
	|[rs].[destination_database_name] as DATABASE_NAME, 
	|  max([rs].[restore_date] ) AS last_restore_date
	|
	|FROM msdb..restorehistory rs
	|group by [rs].[destination_database_name]
	|";
	
	СтрокиСДанными = ВыполнитьЗапросНаСУБД(ТекстЗапроса, 10);

	Возврат СтрокиСДанными;
		
КонецФункции

// Последнее изменение данных - Получает таблицу со датами последних изменений индексов
//
// Параметры:
//  ПараметрыСервера - Структура - см. ДанныеСерверов.Сервера()[ИдентификаторСервера]      
// Возвращаемое значение:
//   ТаблицаЗначений:
//     * DATABASE_NAME - Строка - Имя базы данных 
//     * last_user_update - Дата - Дата последнего изменения индекса
//
Функция ПоследнееИзменениеДанных(ПараметрыСервера) Экспорт
	
	Сервер = ПараметрыСервера;

	ТекстЗапроса = "
	|SELECT max(last_user_update) As last_user_update, DB_NAME(database_id) AS DATABASE_NAME
	|FROM sys.dm_db_index_usage_stats
	|GROUP BY DB_NAME(database_id)
	|ORDER BY max(last_user_update) DESC
	|";
	
	СтрокиСДанными = ВыполнитьЗапросНаСУБД(ТекстЗапроса, 10);

	Возврат СтрокиСДанными;
		
КонецФункции

Функция ДатыСозданияБаз(ПараметрыСервера) Экспорт
	
	Сервер = ПараметрыСервера;

	ТекстЗапроса = "
	|SELECT name DATABASE_NAME, CREATE_DATE
	|FROM sys.databases
	|";
	
	СтрокиСДанными = ВыполнитьЗапросНаСУБД(ТекстЗапроса, 10);

	Возврат СтрокиСДанными;
		
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыполнитьЗапросНаСУБД(ТекстЗапроса, Таймаут, ВремяОперации = 0)

	НачалоОперации = ТекущаяДата();

	СоединениеБД = Новый Соединение();

	СоединениеБД.ТипСУБД = СоединениеБД.ТипыСУБД.MSSQLServer;
	СоединениеБД.Сервер = Сервер.Адрес;
	СоединениеБД.ИмяПользователя = Сервер.Логин;
	СоединениеБД.Пароль = Сервер.Пароль;

	СоединениеБД.Открыть();
	ЗапросСУБД = Новый Запрос();
	ЗапросСУБД.УстановитьСоединение(СоединениеБД);
	ЗапросСУБД.Текст = ТекстЗапроса;
	ЗапросСУБД.Таймаут = Таймаут;
	
	РезультатЗапроса = ЗапросСУБД.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда
		ЗначениеДляВозврата = Новый ТаблицаЗначений;
	Иначе
		Попытка
			ЗначениеДляВозврата = РезультатЗапроса.Выгрузить();
		Исключение
			ЗначениеДляВозврата = Новый ТаблицаЗначений;
		КонецПопытки;
	КонецЕсли;

	СоединениеБД.Закрыть();
	
	ВремяОперации = ТекущаяДата() - НачалоОперации;

	Возврат ЗначениеДляВозврата;

КонецФункции

#КонецОбласти