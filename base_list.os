#Использовать "."

Процедура ЗаписатьТаблицуВФайл(ТаблицаЗначений, КудаСохранять)

	ТекстТаблицы = "";
	МассивКолонок = Новый Массив;

	Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
		ТекстТаблицы = СтрШаблон("%1%2%3", ТекстТаблицы, Колонка.Имя, ";");
		МассивКолонок.Добавить(Колонка.Имя);
	КонецЦикла;

	ТекстТаблицы = СтрШаблон("%1%2", ТекстТаблицы, Символы.ПС);

	Для Каждого СтрокаТаблицы Из ТаблицаЗначений Цикл

		Для Каждого Колонка Из МассивКолонок Цикл
			ТекстТаблицы = СтрШаблон("%1%2%3", ТекстТаблицы, СтрокаТаблицы[Колонка], ";");	
		КонецЦикла;

		ТекстТаблицы = СтрШаблон("%1%2", ТекстТаблицы, Символы.ПС);

	КонецЦикла;

	ЗаписьТекста = Новый ЗаписьТекста(КудаСохранять);
    ЗаписьТекста.Записать(ТекстТаблицы);
    ЗаписьТекста.Закрыть();

КонецПроцедуры

Функция СоздатьТаблицуИнформацияОБазах()

	ИнформацияОБазах = Новый ТаблицаЗначений;
	ИнформацияОБазах.Колонки.Добавить("DATABASE_NAME");
	ИнформацияОБазах.Колонки.Добавить("BASE_1C");
	ИнформацияОБазах.Колонки.Добавить("DATABASE_SIZE");
	ИнформацияОБазах.Колонки.Добавить("BACKUP_RESTORE_DATE");
	ИнформацияОБазах.Колонки.Добавить("LAST_UPDATE_DATE");
	ИнформацияОБазах.Колонки.Добавить("LAST_CONFIG_DATE");
	ИнформацияОБазах.Колонки.Добавить("CREATE_DATE");
	ИнформацияОБазах.Колонки.Добавить("SERVER_RESTART_DATE");

	Возврат ИнформацияОБазах;

КонецФункции

ИдентификаторСервера = "SQL_122";

Сервер  = ДанныеСерверов.Сервера()[ИдентификаторСервера];

ИнформацияОБазах = СоздатьТаблицуИнформацияОБазах();

БазыСервера = КомандыSQL.СписокБазНаСервере(Сервер);

ТаблицаСДаннымиБекапа = КомандыSQL.ПоследниеРазворачиванияИзБекапа(Сервер);
ТаблицаСПоследнимиИзменениямиДанных = КомандыSQL.ПоследнееИзменениеДанных(Сервер);
ТаблицаСДатойСозданияБаз = КомандыSQL.ДатыСозданияБаз(Сервер);

Для Каждого СтрокаБазы Из БазыСервера Цикл
	
	ИмяБазы = СтрокаБазы.DATABASE_NAME;
	ДатаИзмененияКонфигурации = КомандыSQL.ВремяПоследнегоИзмененияКонфига(ИмяБазы, Сервер);
	
	НоваяСтрока = ИнформацияОБазах.Добавить();
	НоваяСтрока.DATABASE_NAME = ИмяБазы;
	НоваяСтрока.LAST_CONFIG_DATE = ДатаИзмененияКонфигурации;
	Если ЗначениеЗаполнено(ДатаИзмененияКонфигурации) Тогда
		НоваяСтрока.BASE_1C = Истина;
	Иначе
		НоваяСтрока.BASE_1C = Ложь;
	КонецЕсли;
	НоваяСтрока.DATABASE_SIZE = СтрокаБазы.DATABASE_SIZE;

	НайденнаяСтрока = ТаблицаСДаннымиБекапа.Найти(ИмяБазы, "DATABASE_NAME");
	Если НайденнаяСтрока <> Неопределено Тогда
		НоваяСтрока.BACKUP_RESTORE_DATE = НайденнаяСтрока.last_restore_date;
	КонецЕсли;
	
	НайденнаяСтрока = ТаблицаСПоследнимиИзменениямиДанных.Найти(ИмяБазы, "DATABASE_NAME");
	Если НайденнаяСтрока <> Неопределено Тогда
		НоваяСтрока.LAST_UPDATE_DATE = НайденнаяСтрока.last_user_update;
	КонецЕсли;
	
	НайденнаяСтрока = ТаблицаСДатойСозданияБаз.Найти(ИмяБазы, "DATABASE_NAME");
	Если НайденнаяСтрока <> Неопределено Тогда
		НоваяСтрока.CREATE_DATE = НайденнаяСтрока.CREATE_DATE;
	КонецЕсли;

КонецЦикла;

НайденнаяСтрока = ТаблицаСДатойСозданияБаз.Найти("tempdb", "DATABASE_NAME");
Если НайденнаяСтрока <> Неопределено Тогда
	ИнформацияОБазах.ЗаполнитьЗначения(НайденнаяСтрока.CREATE_DATE, "SERVER_RESTART_DATE");
КонецЕсли;

ИмяФайла = СтрШаблон("out_%1_%2.csv", ИдентификаторСервера, Формат(ТекущаяДата(), "ДФ=yyyy-MM-dd"));
ПолноеИмяФайла = ОбъединитьПути(ТекущийСценарий().Каталог, ИмяФайла);
ЗаписатьТаблицуВФайл(ИнформацияОБазах, ПолноеИмяФайла);